Checks: "-*, \
bugprone-*, \
cert-*, \
clang-analyzer-*, \
clang-diagnostic-*, \
cppcoreguidelines-*, \
hicpp-*, \
misc-*, \
modernize-*, \
performance-*, \
portability-*, \
readability-*, \
llvm-namespace-comment, \
-bugprone-easily-swappable-parameters, \
-bugprone-exception-escape, \
-bugprone-narrowing-conversions, \
-modernize-use-trailing-return-type, \
-modernize-avoid-c-arrays, \
-clang-analyzer-security.insecureAPI.rand, \
-cppcoreguidelines-avoid-c-arrays, \
-cppcoreguidelines-avoid-magic-numbers, \
-cppcoreguidelines-avoid-non-const-global-variables, \
-cppcoreguidelines-macro-usage, \
-cppcoreguidelines-narrowing-conversions, \
-cppcoreguidelines-pro-bounds-*, \
-cppcoreguidelines-pro-type-reinterpret-cast, \
-cppcoreguidelines-pro-type-member-init, \
-cppcoreguidelines-special-member-functions, \
-hicpp-avoid-c-arrays, \
-hicpp-member-init, \
-hicpp-named-parameter, \
-hicpp-no-array-decay, \
-hicpp-signed-bitwise, \
-hicpp-special-member-functions, \
-modernize-use-nodiscard, \
-modernize-return-braced-init-list, \
-misc-no-recursion, \
-misc-non-private-member-variables-in-classes, \
-readability-function-cognitive-complexity, \
-readability-identifier-length, \
-readability-implicit-bool-conversion, \
-readability-magic-numbers, \
-readability-named-parameter"

# Notes:
# - hicpp-signed-bitwise might be interesting to fix, but there is too much bit magic, and most of
# the issues here are constructs like (x << 3).
# - readability-magic-numbers is disabled because the chess rules contain enough magic, and I am
# lazy to put them into constants.
# - cppcoreguidelines-avoid-magic-numbers is the same as readability-magic-numbers.
# - misc-non-private-member-variables-in-classes is disabled by design.
# - bugprone-exception-escape is very expensive and can be false-positive on Result<T, E>.
# - cppcoreguidelines-avoid-non-const-global-variables conflicts with tests and benchmarks.
# - clang-analyzer-security.insecureAPI.rand yields false positives on macOS with SoFUtil::random().
# - bugprone-narrowing-conversions might be interesting to fix, but it triggers too many times and
# if I fix it, the code will be harder to read because of many `static_cast<>`'s.
# - cppcoreguidelines-narrowing-conversions is the same as bugprone-narrowing-conversions.
# - readability-identifier-length is super annoying.
# - hicpp-special-member-functions may be interesting to fix later, but I am lazy to do it.
# - cppcoreguidelines-special-member-functions is the same as hicpp-special-member-functions.

HeaderFilterRegex: '(bench|gen|src)/.+'

CheckOptions:
    - key: readability-identifier-naming.ClassCase
      value: CamelCase
    - key: readability-identifier-naming.ClassConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.EnumCase
      value: CamelCase
    - key: readability-identifier-naming.EnumConstantCase
      value: CamelCase
    - key: readability-identifier-naming.FunctionCase
      value: camelBack
    - key: readability-identifier-naming.GlobalConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.GlobalVariableCase
      value: camelBack
    - key: readability-identifier-naming.GlobalVariablePrefix
      value: g_
    - key: readability-identifier-naming.GlobalConstantPointerCase
      value: UPPER_CASE
    - key: readability-identifier-naming.MacroDefinitionCase
      value: UPPER_CASE
    - key: readability-identifier-naming.MethodCase
      value: camelBack
    - key: readability-identifier-naming.NamespaceCase
      value: CamelCase
    - key: readability-identifier-naming.ParameterCase
      value: camelBack
    - key: readability-identifier-naming.PrivateMemberCase
      value: camelBack
    - key: readability-identifier-naming.PrivateMemberSuffix
      value: _
    - key: readability-identifier-naming.PublicMemberCase
      value: camelBack
    - key: readability-identifier-naming.StaticConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.TemplateParameterCase
      value: CamelCase
    - key: readability-identifier-naming.UnionCase
      value: CamelCase
    - key: readability-identifier-naming.ValueTemplateParameterCase
      value: CamelCase
    - key: readability-identifier-naming.VariableCase
      value: camelBack
